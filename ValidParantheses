class Solution(object):
    def isValid(self, s):
        bracket_map = {')': '(', '}': '{', ']': '['}
    
        stack = []

        for char in s:
            if char in bracket_map.values():  # If it's an opening bracket
                stack.append(char)
            elif char in bracket_map.keys():  # If it's a closing bracket
                if not stack or stack[-1] != bracket_map[char]:  # Check for matching
                    return False
                stack.pop()  # Pop the matching opening bracket
            else:
                return False  # Invalid character

        return not stack  # If stack is empty, all brackets matched
        
    
    
